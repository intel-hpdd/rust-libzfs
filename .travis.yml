sudo: required
services:
  - docker

jobs:
  include:
    - stage: test
      env: Type='bindgen test'
      script:
        - docker run -d -it --name libzfs -v $(pwd):/rust-libzfs:rw intelhpdd/libzfs
        - docker exec -i libzfs bash -c 'cd /rust-libzfs/node-libzfs && cargo build'
        - docker exec -i libzfs bash -c 'cd /rust-libzfs/libzfs-sys && cargo test bindgen_test_layout'
    - stage: test
      env: Type='virus scan'
      script:
        - sudo apt-get install clamav -y
        - sudo freshclam
        - clamscan --quiet -r ./
    - stage: test
      env: Type='ts2fable'
      language: node_js
      node_js: 8
      script:
        - npm i -g ts2fable
        - ts2fable node-libzfs/lib/libzfs.d.ts node-libzfs/libzfs.fs
    - stage: deploy
      env: Type='libzfs-sys'
      language: rust
      rust: stable
      if: branch =~ ^v.+libzfs-sys$
      script:
        - docker run -d -it --name libzfs -v $(pwd):/rust-libzfs:rw intelhpdd/libzfs
        - docker exec -i libzfs bash -c "cd /rust-libzfs/libzfs-sys && cargo package && cargo publish --token $CARGO_TOKEN"
    - stage: deploy
      env: Type='libzfs'
      language: rust
      rust: stable
      if: branch =~ ^v.+\dlibzfs$
      script:
        - docker run -d -it --name libzfs -v $(pwd):/rust-libzfs:rw intelhpdd/libzfs
        - docker exec -i libzfs bash -c "cd /rust-libzfs/libzfs && cargo package && cargo publish --token $CARGO_TOKEN"
    - stage: deploy
      env: Type='@iml/node-libzfs'
      language: node_js
      node_js: 8
      if: branch =~ ^v.+node-libzfs$
      before_deploy:
        - npm i -g ts2fable
        - ts2fable node-libzfs/lib/libzfs.d.ts node-libzfs/libzfs.fs
        - cd node-libzfs
      deploy:
        provider: npm
        email: "$NPM_EMAIL"
        api_key: "$NPM_TOKEN"
        skip_cleanup: true
        on:
          tags: true
